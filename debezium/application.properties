

debezium.source.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.source.plugin.name=pgoutput
debezium.source.offset.storage.file.filename=data/offsets.dat
debezium.source.offset.flush.interval.ms=0
debezium.source.topic.prefix=insight
debezium.source.schema.include.list=private
debezium.source.table.include.list=private\\.inodes
debezium.source.value.converter=org.apache.kafka.connect.json.JsonConverter
debezium.source.value.converter.schemas.enable=false

debezium.transforms=ingest_inode,embed_inode,index_folder_inode,index_file_inode,move_inode,share_inode,delete_inode

# Ingest files after upload is successful
debezium.transforms.ingest_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.ingest_inode.language=jsr223.groovy
debezium.transforms.ingest_inode.topic.expression=value.op == 'u' \
    && value.after.type == 'file' \
    && value.after.is_uploaded \
    && !value.after.is_ingested \
    ? 'ingest_inode' : null
debezium.transforms.ingest_inode.topic.regex=insight.private.inodes

# Embed files after ingest is done
debezium.transforms.embed_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.embed_inode.language=jsr223.groovy
debezium.transforms.embed_inode.topic.expression=value.op == 'u' \
    && value.after.type == 'file' \
    && !value.before.is_ingested && value.after.is_ingested \
    ? 'embed_inode' : null
debezium.transforms.embed_inode.topic.regex=insight.private.inodes

# Index folder inodes immediately
debezium.transforms.index_folder_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.index_folder_inode.language=jsr223.groovy
debezium.transforms.index_folder_inode.topic.expression=value.op == 'u' \
    && value.after.type == 'folder' \
    && !value.after.is_indexed \
    ? 'index_inode' : null
debezium.transforms.index_folder_inode.topic.regex=insight.private.inodes

# Index file inodes after ingest is done
debezium.transforms.index_file_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.index_file_inode.language=jsr223.groovy
debezium.transforms.index_file_inode.topic.expression=value.op == 'u' \
    && value.after.type == 'file' \
    && !value.before.is_ingested && value.after.is_ingested \
    ? 'index_inode' : null
debezium.transforms.index_file_inode.topic.regex=insight.private.inodes

# Move inodes when name or parent changes
debezium.transforms.move_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.move_inode.language=jsr223.groovy
debezium.transforms.move_inode.topic.expression=value.op == 'u' \
    && (value.before.name != value.after.name || value.before.parent_id != value.after.parent_id) \
    ? 'move_inode' : null
debezium.transforms.move_inode.topic.regex=insight.private.inodes

# Update inode shares on public change
debezium.transforms.share_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.share_inode.language=jsr223.groovy
debezium.transforms.share_inode.topic.expression=value.op == 'u' \
    && value.before.is_public != value.after.is_public \
    ? 'share_inode' : null
debezium.transforms.share_inode.topic.regex=insight.private.inodes

# Delete inodes on record deletion
debezium.transforms.delete_inode.type=io.debezium.transforms.ContentBasedRouter
debezium.transforms.delete_inode.language=jsr223.groovy
debezium.transforms.delete_inode.topic.expression=value.op == 'r' \
    ? 'delete_inode' : null
debezium.transforms.delete_inode.topic.regex=insight.private.inodes


debezium.sink.type=rabbitmq
debezium.sink.rabbitmq.exchange=insight
debezium.sink.rabbitmq.routingKeyFromTopicName=true
