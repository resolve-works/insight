
version: '3'

services:
  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./templates:/etc/nginx/templates
    depends_on:
      - postgrest

  postgrest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgresql://${PG_API_USER}:${PG_API_PASSWORD}@postgres:5432/insight
      PGRST_DB_SCHEMAS: public
      PGRST_JWT_SECRET: "@/run/secrets/jwk"
      PGRST_JWT_ROLE_CLAIM_KEY: .realm_access.roles[2]
      PGRST_DB_ANON_ROLE: web_anon
    secrets:
      - jwk
    depends_on:
      - postgres

  worker:
    build: worker
    command: watchmedo auto-restart -d=/usr/local/lib/python3.11/site-packages/insight_worker -p="*.py" -R insight-worker -- process-messages
    environment:
      TIKA_URI: http://tika:9998/tika
      POSTGRES_URI: postgresql://${PG_WORKER_USER}:${PG_WORKER_PASSWORD}@postgres:5432/insight
      ELASTICSEARCH_URI: http://elasticsearch:9200
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT}
      STORAGE_BUCKET: ${STORAGE_BUCKET}
      STORAGE_SECURE: ${STORAGE_SECURE}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY}
    volumes:
      - ./worker/insight_worker:/usr/local/lib/python3.11/site-packages/insight_worker
    depends_on:
      - tika
      - elasticsearch
      - postgres
      - minio

  tika:
    image: apache/tika

  elasticsearch:
    image: elasticsearch:8.11.0
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
          memory: 1G
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  postgres:
    build: postgres
    environment:
      POSTGRES_USER: insight
      POSTGRES_PASSWORD: insight
      PG_API_USER: ${PG_API_USER}
      PG_API_PASSWORD: ${PG_API_PASSWORD}
      PG_WORKER_USER: ${PG_WORKER_USER}
      PG_WORKER_PASSWORD: ${PG_WORKER_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT}
      STORAGE_BUCKET: ${STORAGE_BUCKET}
      STORAGE_SECURE: ${STORAGE_SECURE}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    depends_on:
      - minio

  minio:
    image: minio/minio
    entrypoint: sh
    command: -c 'mkdir /data/${STORAGE_BUCKET} && minio server /data'
    environment:
      MINIO_ROOT_USER: ${STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${STORAGE_SECRET_KEY}
    volumes:
      - minio-data:/data

secrets:
   jwk:
     file: .jwk

volumes:
  minio-data: {}
  postgres-data: {}
  elasticsearch-data: {}

