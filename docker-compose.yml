
version: '3'

services:
  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./templates:/etc/nginx/templates
      - files:/insight
    depends_on:
      - postgrest

  postgrest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgresql://${PG_API_USER}:${PG_API_PASSWORD}@postgres/insight
      PGRST_DB_SCHEMAS: insight
      PGRST_JWT_SECRET: "@/run/secrets/jwk"
      PGRST_JWT_ROLE_CLAIM_KEY: .realm_access.roles[2]
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_ANON_ROLE: ${PG_ANONYMOUS}
    secrets:
      - jwk
    depends_on:
      - postgres

  worker:
    build: worker
    command: watchmedo auto-restart -d=/usr/local/lib/python3.12/site-packages/insight_worker -p="*.py" -R insight-worker -- process-messages
    environment:
      TIKA_URI: http://tika:9998/tika
      POSTGRES_URI: postgresql://${PG_WORKER_USER}:${PG_WORKER_PASSWORD}@postgres/insight
      ELASTICSEARCH_URI: http://elasticsearch:9200
      INSIGHT_FILES_PATH: /insight/files
    volumes:
      - files:/insight
      - ./worker/insight_worker:/usr/local/lib/python3.12/site-packages/insight_worker
    depends_on:
      - tika
      - elasticsearch
      - postgres

  tika:
    image: apache/tika

  elasticsearch:
    image: elasticsearch:8.11.0
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
          memory: 1G
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: insight
      POSTGRES_PASSWORD: insight
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d

secrets:
   jwk:
     file: .jwk

volumes:
  files: {}
  postgres-data: {}
  elasticsearch-data: {}

