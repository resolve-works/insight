
version: '3'

services:
  gateway:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./templates:/etc/nginx/templates
      - pagestreams:/insight/pagestreams
      - files:/insight/files:ro
    depends_on:
      - api

  api:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgresql://${PG_API_USER}:${PG_API_PASSWORD}@database/insight
      PGRST_DB_SCHEMAS: insight
      PGRST_JWT_SECRET: "@/run/secrets/jwk"
      PGRST_JWT_ROLE_CLAIM_KEY: .realm_access.roles[2]
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_ANON_ROLE: ${PG_ANONYMOUS}
    secrets:
      - jwk
    depends_on:
      - database

  #api-documentation:
    #image: swaggerapi/swagger-ui
    #ports:
      #- "8080:8080"
    #environment:
      #API_URL: http://api:3000/

  extract:
    image: apache/tika

  ingest:
    build: ingest
    command: watchmedo auto-restart -d=/usr/local/lib/python3.12/site-packages/ingest -p="*.py" -R insight-ingest -- process-messages
    environment:
      DATABASE_URI: postgresql://${PG_INGEST_USER}:${PG_INGEST_PASSWORD}@database/insight
      EXTRACT_URI: http://extract:9998/tika
      INGEST_FILES_PATH: /insight/files
    volumes:
      - pagestreams:/insight/pagestreams:ro
      - files:/insight/files
      - ./ingest/ingest:/usr/local/lib/python3.12/site-packages/ingest
    depends_on:
      - database

  database:
    image: postgres
    environment:
      POSTGRES_USER: insight
      POSTGRES_PASSWORD: insight
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d

secrets:
   jwk:
     file: .jwk

volumes:
  pgdata: {}
  pagestreams: {}
  files: {}

